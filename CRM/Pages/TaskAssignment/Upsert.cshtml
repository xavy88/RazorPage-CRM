@page
@using CRM.Utility
@model CRM.Pages.TaskAssignment.UpsertModel
@{
}
@if (User.IsInRole(SD.ManagerRole) || User.IsInRole(SD.RootRole) || User.IsInRole(SD.SupervisorRole))
{
    <form method="post" asp-action="Upsert" enctype="multipart/form-data">
        <div class="container">
            <div class="row px-2 mx-2 backgroundWhite border">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @if (Model.TaskAssignmentObj.TaskAssignment.Id != 0)
                {
                    <input type="hidden" asp-for="TaskAssignmentObj.TaskAssignment.Id" />
                }

                <div class="col-12 px-3" style="border-bottom:1px solid #325d88">
                    <h2 class="text-primary"><i class="fa fa-cogs" aria-hidden="true"></i> @(Model.TaskAssignmentObj.TaskAssignment.Id!=0?"Update" : "Create") Task Assignment</h2>
                </div>

                <div class="col-8 pt-3">
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="TaskAssignmentObj.TaskAssignment.Account"></label>
                        </div>

                        <div class="col-8">
                            @Html.DropDownListFor(m => m.TaskAssignmentObj.TaskAssignment.AccountId,
                                                  Model.TaskAssignmentObj.AccountList,
                                                  "- Please select an Account -",
                                                  new { @class = "form-control" })
                            <span class="text-danger" asp-validation-for="TaskAssignmentObj.TaskAssignment.AccountId"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="TaskAssignmentObj.TaskAssignment.Task"></label>
                        </div>

                        <div class="col-8">
                            @Html.DropDownListFor(m => m.TaskAssignmentObj.TaskAssignment.TaskId,
                                                  Model.TaskAssignmentObj.TaskList,
                                                  "- Please select a Task -",
                                                  new { @class = "form-control" })
                            <span class="text-danger" asp-validation-for="TaskAssignmentObj.TaskAssignment.TaskId"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label>Employee</label>
                        </div>

                        <div class="col-8">
                            @Html.DropDownListFor(m => m.TaskAssignmentObj.TaskAssignment.ApplicationUserId,
                                                  Model.TaskAssignmentObj.ApplicationUserList,
                                                  "- Please select an Employee -",
                                                  new { @class = "form-control" })
                            <span class="text-danger" asp-validation-for="TaskAssignmentObj.TaskAssignment.ApplicationUserId"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="TaskAssignmentObj.TaskAssignment.DueDate"></label>
                        </div>

                        <div class="col-8">
                            <input class="input-group date form-control" data-date-format="mm/dd/yyyy" asp-for="TaskAssignmentObj.TaskAssignment.DueDate" />
                            <span class="text-danger" asp-validation-for="TaskAssignmentObj.TaskAssignment.DueDate"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="TaskAssignmentObj.TaskAssignment.DepartmentId"></label>
                        </div>

                        <div class="col-8">
                            @Html.DropDownListFor(m => m.TaskAssignmentObj.TaskAssignment.DepartmentId,
                                                  Model.TaskAssignmentObj.DepartmentList,
                                                  "- Please select a Department -",
                                                  new { @class = "form-control" })
                            <span class="text-danger" asp-validation-for="TaskAssignmentObj.TaskAssignment.DepartmentId"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-4">
                            <label asp-for="TaskAssignmentObj.TaskAssignment.Notes"></label>
                        </div>

                        <div class="col-8">
                            <textarea class="form-control" asp-for="TaskAssignmentObj.TaskAssignment.Notes"></textarea>
                            <span class="text-danger" asp-validation-for="TaskAssignmentObj.TaskAssignment.Notes"></span>
                        </div>
                    </div>

                    <div class="form-group row">

                        <div class="col-8 offset-4">
                            <div class="row">
                                <div class="col-6">
                                    @if (Model.TaskAssignmentObj.TaskAssignment.Id != 0)
                                    {
                                        <button type="submit" class="btn btn-primary form-control"><i class="fas fa-clipboard-check"></i> Update</button>
                                    }
                                    else
                                    {
                                        <button type="submit" onclick="return ValidateInput()" class="btn btn-primary form-control"><i class="fas fa-plus-circle"></i> Create</button>
                                    }


                                </div>
                                <div class="col-6">
                                    <a asp-page="./Index" class="btn btn-success form-control"><i class="fas fa-arrow-circle-left"></i> Back To List</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (Model.TaskAssignmentObj.TaskAssignment.Id != 0)
                {
                    <div class="col-4" style="padding-top: 4em;">
                        <img src="~/images/Edit-Item.png" width="100%" />
                    </div>
                }
                else
                {
                    <div class="col-4" style="padding-top: 4em;">
                        <img src="/images/Create-Item.png" width="100%" />
                    </div>
                }
            </div>
        </div>
    </form>
}
else
{
    <div class="container-lg">
        <img style="padding-left:70px;" src="~/images/Access-Denied.png" />
    </div>
}
@section Scripts{
    <script>
        function ValidateInput() {
            if (document.getElementById("uploadBox").value == "") {
                swal("Error", "Please Select an Image", "error")
                return false;
            }
            return true;
        };
        tinymce.init({
            selector: 'textarea',
            plugins: "lists",
            menubar: 'file edit format'
        });
    </script>


}